applicationName: CWDS CALS API
version: ${APP_VERSION:-local}

server:
  applicationConnectors:
  - type: http
    port: 8090
  - type: https
    port: 8443
    keyStorePath: ${KEY_STORE_FILE:-./config/testKeyStore.jks}
    keyStorePassword: ${KEY_STORE_PASSWORD:-testPass}
    keyStoreType: JKS
    supportedProtocols: [TLSv1, TLSv1.1, TLSv1.2]
  adminConnectors:
  - type: http
    port: 9091

shiro:
  iniConfigs: ["file:${SHIRO_CONFIG_PATH:-config/shiro.ini}"]

swagger:
  templateName: swagger.mustache
  assetsPath: /static
  resourcePackage: gov.ca.cwds.cals.web.rest
  title: CWDS CALC API
  description: RESTful API definitions for the CWS New System.
  logo: images/CWDS-API-Logo-Horizontal.png
  loginUrl: ${LOGIN_URL:-http://localhost:8090/authn/login}
  showSwagger: ${SHOW_SWAGGER:-true}

nsDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  url: jdbc:h2:mem:cwsns;INIT=create schema if not exists cwsns\;set schema cwsns
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: ${DB_NS_CP_INITIAL_SIZE:-2}
  minSize: ${DB_NS_CP_MIN_SIZE:-2}
  maxSize: ${DB_NS_CP_MAX_SIZE:-8}
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: true

fasDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  url: jdbc:h2:mem:fas;INIT=create schema if not exists fas\;set schema fas
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: ${DB_NS_CP_INITIAL_SIZE:-2}
  minSize: ${DB_NS_CP_MIN_SIZE:-2}
  maxSize: ${DB_NS_CP_MAX_SIZE:-8}
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: true

cmsDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  url: jdbc:h2:mem:cwscms;INIT=create schema if not exists cwscms\;set schema cwscms
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: ${DB_CMS_CP_INITIAL_SIZE:-2}
  minSize: ${DB_CMS_CP_MIN_SIZE:-2}
  maxSize: ${DB_CMS_CP_MAX_SIZE:-8}
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
      hibernate.default_schema: CWSCMS
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: true

lisDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  url: jdbc:h2:mem:lis;INIT=create schema if not exists lis\;set schema lis
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: ${DB_LIS_CP_INITIAL_SIZE:-2}
  minSize: ${DB_LIS_CP_MIN_SIZE:-2}
  maxSize: ${DB_LIS_CP_MAX_SIZE:-8}
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
      hibernate.default_schema: lis
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: true

calsnsDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  url: jdbc:h2:mem:calsns;INIT=create schema if not exists calsns\;set schema calsns
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: ${DB_NS_CP_INITIAL_SIZE:-2}
  minSize: ${DB_NS_CP_MIN_SIZE:-2}
  maxSize: ${DB_NS_CP_MAX_SIZE:-8}
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: gov.ca.cwds.cals.persistence.hibernate.dialect.JsonbSupportH2Dialect
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: true

