import gov.ca.cwds.cals.persistence.model.calsns.dictionaries.AddressType
import gov.ca.cwds.cals.persistence.model.calsns.dictionaries.CountyType
import gov.ca.cwds.cals.persistence.model.calsns.dictionaries.StateType
import gov.ca.cwds.cals.service.dto.rfa.RFA1aFormDTO
import gov.ca.cwds.cals.service.dto.rfa.ResidenceDTO
import gov.ca.cwds.cals.service.dto.rfa.RFAAddressDTO
import gov.ca.cwds.cals.service.dto.rfa.ApplicantDTO
import gov.ca.cwds.cals.service.dto.rfa.RFA1bFormDTO
import gov.ca.cwds.cals.service.dto.rfa.OtherAdultDTO
import gov.ca.cwds.cals.service.dto.rfa.RelationshipToApplicantDTO
import gov.ca.cwds.cals.service.dto.rfa.MinorChildDTO
import gov.ca.cwds.cals.Utils
import gov.ca.cwds.cals.Constants
import gov.ca.cwds.cals.Constants.Validation
import gov.ca.cwds.cals.Constants.Validation.Business
import gov.ca.cwds.cals.Constants.BusinessRulesAgendaGroups
import gov.ca.cwds.cals.Constants.AddressTypes
import org.apache.commons.lang3.StringUtils
import gov.ca.cwds.cals.exception.IssueDetails
import gov.ca.cwds.cals.exception.IssueType

global java.util.Set validationDetailsList;

rule "Validate that applicant exists"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    not ApplicantDTO() from $form.applicants;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.APPLICATION_HAS_NO_APPLICANT);
    details.setUserMessage(Validation.Business.APPLICATION_HAS_NO_APPLICANT_MESSAGE);
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that applicant has RFA1b form"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $applicant: ApplicantDTO() from $form.applicants;
    not RFA1bFormDTO() from $applicant.rfa1bForm;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.APPLICANT_HAS_NO_RFA1B_FORM);
    details.setUserMessage(String.format(Validation.Business.APPLICANT_HAS_NO_RFA1B_FORM_MESSAGE,
        $applicant.getFirstName() != null ? $applicant.getFirstName() : "",
        $applicant.getLastName() != null ? $applicant.getLastName() : "",
        $applicant.getNameSuffix() != null ? $applicant.getNameSuffix().getValue() : ""));
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that other adult has reference to applicant"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $otherAdult: OtherAdultDTO() from $form.otherAdults;
    $relationship: RelationshipToApplicantDTO() from $otherAdult.relationshipToApplicants;
    not ApplicantDTO(id == $relationship.applicantId) from $form.applicants;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.OTHER_ADULT_HAS_NO_REFERENCE_TO_APPLICANT);
    details.setUserMessage(String.format(Validation.Business.OTHER_ADULT_HAS_NO_REFERENCE_TO_APPLICANT_MESSAGE,
        $otherAdult.getFirstName() != null ? $otherAdult.getFirstName() : "",
        $otherAdult.getLastName() != null ? $otherAdult.getLastName() : "",
        $otherAdult.getNameSuffix() != null ? $otherAdult.getNameSuffix().getValue() : ""));
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that other adult has first name"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $otherAdult: OtherAdultDTO() from $form.otherAdults;
    eval(StringUtils.isBlank($otherAdult.getFirstName()))
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.OTHER_ADULT_HAS_NO_FIRST_NAME);
    details.setUserMessage(String.format(Validation.Business.OTHER_ADULT_HAS_NO_FIRST_NAME_MESSAGE,
        $otherAdult.getFirstName() != null ? $otherAdult.getFirstName() : "",
        $otherAdult.getLastName() != null ? $otherAdult.getLastName() : "",
        $otherAdult.getNameSuffix() != null ? $otherAdult.getNameSuffix().getValue() : ""));
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that other adult has last name"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $otherAdult: OtherAdultDTO() from $form.otherAdults;
    eval(StringUtils.isBlank($otherAdult.getLastName()))
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.OTHER_ADULT_HAS_NO_LAST_NAME);
    details.setUserMessage(String.format(Validation.Business.OTHER_ADULT_HAS_NO_LAST_NAME_MESSAGE,
        $otherAdult.getFirstName() != null ? $otherAdult.getFirstName() : "",
        $otherAdult.getLastName() != null ? $otherAdult.getLastName() : "",
        $otherAdult.getNameSuffix() != null ? $otherAdult.getNameSuffix().getValue() : ""));
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that minor child has reference to applicant"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $minorChild: MinorChildDTO() from $form.minorChildren;
    $relationship: RelationshipToApplicantDTO() from $minorChild.relationshipToApplicants;
    not ApplicantDTO(id == $relationship.applicantId) from $form.applicants;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.MINOR_CHILD_HAS_NO_REFERENCE_TO_APPLICANT);
    details.setUserMessage(String.format(Validation.Business.MINOR_CHILD_HAS_NO_REFERENCE_TO_APPLICANT_MESSAGE,
        $minorChild.getOtherRelativeFirstName() != null ? $minorChild.getOtherRelativeFirstName() : "",
        $minorChild.getOtherRelativeLastName() != null ? $minorChild.getOtherRelativeLastName() : "",
        $minorChild.getOtherRelativeNameSuffix() != null ? $minorChild.getOtherRelativeNameSuffix().getValue() : ""));
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that residence exists"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    not ResidenceDTO() from $form.residence;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.APPLICATION_HAS_NO_RESIDENCE);
    details.setUserMessage(Validation.Business.APPLICATION_HAS_NO_RESIDENCE_MESSAGE);
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that residential address exists"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $residence: ResidenceDTO() from $form.residence;
    not RFAAddressDTO(type.value == AddressTypes.RESIDENTIAL) from $residence.addresses;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.APPLICATION_HAS_NO_RESIDENTIAL_ADDRESS);
    details.setUserMessage(Validation.Business.APPLICATION_HAS_NO_RESIDENTIAL_ADDRESS_MESSAGE);
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that residential address has street name"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $residence: ResidenceDTO() from $form.residence;
    $address: RFAAddressDTO(type.value == AddressTypes.RESIDENTIAL) from $residence.addresses;
    eval(StringUtils.isBlank(Utils.Address.getSilentStreetName($address)));
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.RESIDENTIAL_ADDRESS_HAS_NO_STREET_NAME);
    details.setUserMessage(Validation.Business.RESIDENTIAL_ADDRESS_HAS_NO_STREET_NAME_MESSAGE);
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that residential address has city"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $residence: ResidenceDTO() from $form.residence;
    $address: RFAAddressDTO(type.value == AddressTypes.RESIDENTIAL) from $residence.addresses;
    eval(StringUtils.isBlank($address.getCity()));
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.RESIDENTIAL_ADDRESS_HAS_NO_CITY);
    details.setUserMessage(Validation.Business.RESIDENTIAL_ADDRESS_HAS_NO_CITY_MESSAGE);
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that residential address has state"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $residence: ResidenceDTO() from $form.residence;
    $address: RFAAddressDTO(type.value == AddressTypes.RESIDENTIAL) from $residence.addresses;
    not StateType() from $address.state;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.RESIDENTIAL_ADDRESS_HAS_NO_STATE);
    details.setUserMessage(Validation.Business.RESIDENTIAL_ADDRESS_HAS_NO_STATE_MESSAGE);
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that residential address has zip code"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $residence: ResidenceDTO() from $form.residence;
    $address: RFAAddressDTO(type.value == AddressTypes.RESIDENTIAL) from $residence.addresses;
    eval(StringUtils.isBlank($address.getZip()));
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.RESIDENTIAL_ADDRESS_HAS_NO_ZIP_CODE);
    details.setUserMessage(Validation.Business.RESIDENTIAL_ADDRESS_HAS_NO_ZIP_CODE_MESSAGE);
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that application has county"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    not CountyType() from $form.applicationCounty;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.APPLICATION_HAS_NO_COUNTY);
    details.setUserMessage(Validation.Business.APPLICATION_HAS_NO_COUNTY_MESSAGE);
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate Applicant's First Name"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $applicant : ApplicantDTO() from $form.applicants;
    eval(StringUtils.isBlank($applicant.getFirstName()))
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.APPLICANT_FIRST_NAME);
    details.setUserMessage(String.format(Validation.Business.APPLICANT_FIRST_NAME_IS_EMPTY_MESSAGE,
        $applicant.getFirstName() != null ? $applicant.getFirstName() : "",
        $applicant.getLastName() != null ? $applicant.getLastName() : "",
        $applicant.getNameSuffix() != null ? $applicant.getNameSuffix().getValue() : ""));
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Applicant's Empty Last Name"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $applicant : ApplicantDTO() from $form.applicants;
    eval(StringUtils.isBlank($applicant.getLastName()));
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.APPLICANT_LAST_NAME);
    details.setUserMessage(String.format(Validation.Business.APPLICANT_LAST_NAME_IS_EMPTY_MESSAGE,
       $applicant.getFirstName() != null ? $applicant.getFirstName() : "",
       $applicant.getLastName() != null ? $applicant.getLastName() : "",
       $applicant.getNameSuffix() != null ? $applicant.getNameSuffix().getValue() : ""));
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate Applicant's Driver License"
  dialect "mvel"
  agenda-group "form-submission-validation"
  when
      $form: RFA1aFormDTO();
      $applicant: ApplicantDTO( (driverLicenseNumber == null && driverLicenseState != null)
          || (driverLicenseNumber != null && driverLicenseState == null)) from $form.applicants;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(String.format(Validation.Business.Code.APPLICANT_DRIVER_LICENSE,
       $applicant.getFirstName() != null ? $applicant.getFirstName() : "",
       $applicant.getLastName() != null ? $applicant.getLastName() : "",
       $applicant.getNameSuffix() != null ? $applicant.getNameSuffix().getValue() : ""));
    details.setUserMessage(String.format(Validation.Business.APPLICANT_DRIVER_LICENSE_IS_INVALID_MESSAGE,
        $applicant.getFirstName() != null ? $applicant.getFirstName() : "",
               $applicant.getLastName() != null ? $applicant.getLastName() : "",
               $applicant.getNameSuffix() != null ? $applicant.getNameSuffix().getValue() : ""));
    details.setTechnicalMessage(BusinessRulesAgendaGroups.APPLICANT_VALIDATION);
    validationDetailsList.add(details);
end