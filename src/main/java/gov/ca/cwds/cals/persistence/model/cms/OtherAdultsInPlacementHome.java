package gov.ca.cwds.cals.persistence.model.cms;

import gov.ca.cwds.data.persistence.PersistentObject;
import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;

/**
 * @author CWDS CALS API Team
 *
 * This entity type records the name, date of birth, start date, end date, gender, and other related
 * information for all the other adults (age of 18 or over) residing in the PLACEMENT HOME or with
 * significant contact but not residing in the PLACEMENT HOME.
 *
 */

@Entity
@Table(name = "OTH_ADLT")
@SuppressWarnings({"squid:S3437"}) //LocalDate is serializable
public class OtherAdultsInPlacementHome implements PersistentObject {

  private static final long serialVersionUID = -5392095865743870620L;

  /**
   * ID - A system generated number used to uniquely identify each OTHER_ADULT_IN_PLACEMENT_HOME.
   * This ID is composed of a base 62 Creation Timestamp and the STAFF_PERSON ID (a sequential 3
   * digit base 62 number generated by the system). This value eliminates the need for an additional
   * set of Creation Timestamp and Creation User ID which is needed to satisfy the Audit Trail
   * requirement.
   */
  @Id
  @Column(name = "IDENTIFIER", nullable = false, length = 10)
  private String identifier;

  /**
   * BIRTH_DATE - Date of birth for the OTHER ADULTS IN PLACEMENT HOME (either adult in home or
   * adult with significant contact not in home).
   */
  @Basic
  @Column(name = "BIRTH_DT", nullable = true)
  private LocalDate birthDt;

  /**
   * END_DATE - The last date the OTHER ADULTS IN PLACEMENT HOME (either adult in home or adult with
   * significant contact not in home) was associated with this particular PLACEMENT HOME.
   */
  @Basic
  @Column(name = "END_DT", nullable = true)
  private LocalDate endDt;

  /**
   * GENDER_CODE - Indicates the gender (e.g., F = Female, M = Male) of the OTHER ADULTS IN
   * PLACEMENT HOME (either adult in home or adult with significant contact not in home).
   */
  @Basic
  @Column(name = "GENDER_CD", nullable = false, length = 1)
  private String genderCd;

  /**
   * NAME - The complete name of the OTHER ADULTS IN PLACEMENT HOME (either adult in home or adult
   * with significant contact not in home).
   */
  @Basic
  @Column(name = "OTH_ADLTNM", nullable = false, length = 35)
  private String othAdltnm;

  /**
   * START_DATE - The first date the OTHER ADULTS IN PLACEMENT HOME (either adult in home or adult
   * with significant contact not in home) was associated with this particular PLACEMENT HOME.
   */
  @Basic
  @Column(name = "START_DT", nullable = true)
  private LocalDate startDt;

  /**
   * LAST_UPDATE_ID - The ID (a sequential 3 digit base 62 number generated by the system) of the
   * STAFF PERSON or batch program which made the last update to an occurrence of this entity type.
   */
  @Basic
  @Column(name = "LST_UPD_ID", nullable = false, length = 3)
  private String lstUpdId;

  /**
   * LAST_UPDATE_TIMESTAMP - The time and date of the most recent update to an occurrence of this
   * entity type.
   */
  @Basic
  @Column(name = "LST_UPD_TS", nullable = false)
  private LocalDateTime lstUpdTs;

  /**
   * FKPLC_HM_T - Mandatory Foreign key that RESIDES_IN a PLACEMENT_HOME.
   */
  @Basic
  @Column(name = "FKPLC_HM_T", nullable = false, length = 10)
  private String fkplcHmT;

  /**
   * COMMENT_DESCRIPTION - Free form text which provides pertinent information about a specific
   * OTHER ADULTS IN PLACEMENT HOME.
   */
  @Basic
  @Column(name = "COMNT_DSC", nullable = false, length = 160)
  private String comntDsc;

  /**
   * OTHER_ADULT_CODE - Indicates the type of other adult in the PLACEMENT_HOME (e.g. O = Other
   * Adult residing in the PLACEMENT HOME, S = Adult with significant contact not residing in the
   * PLACEMENT HOME).
   */
  @Basic
  @Column(name = "OTH_ADL_CD", nullable = false, length = 1)
  private String othAdlCd;

  /**
   * IDENTIFIED_DATE - The date the OTHER ADULTS IN PLACEMENT HOME (either adult in home or adult
   * with significant contact not in home) was identified.
   */
  @Basic
  @Column(name = "IDENTFD_DT", nullable = true)
  private LocalDate identfdDt;

  /**
   * RESIDED_OUT_OF_STATE_IND - Indicates whether the OTHER ADULTS IN PLACEMENT HOME (either adult
   * in home or adult with significant contact not in home) has resided out of the State of
   * California (Y), or has not resided out of the State of California (N) in the last five (5)
   * years.
   */
  @Basic
  @Column(name = "RESOST_IND", nullable = true, length = 1)
  private String resostInd;

  /**
   * PASSED_BACKGROUND_CHECK_CODE - Indicates whether the OTHER ADULTS IN PLACEMENT HOME (either
   * adult in home or adult with significant contact not in home) has passed all background checks
   * (Y), has not passed all background checks (N), or unknown (U).
   */
  @Basic
  @Column(name = "PASSBC_CD", nullable = true, length = 1)
  private String passbcCd;

  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public LocalDate getBirthDt() {
    return birthDt;
  }

  public void setBirthDt(LocalDate birthDt) {
    this.birthDt = birthDt;
  }

  public LocalDate getEndDt() {
    return endDt;
  }

  public void setEndDt(LocalDate endDt) {
    this.endDt = endDt;
  }

  public String getGenderCd() {
    return genderCd;
  }

  public void setGenderCd(String genderCd) {
    this.genderCd = genderCd;
  }

  public String getOthAdltnm() {
    return othAdltnm;
  }

  public void setOthAdltnm(String othAdltnm) {
    this.othAdltnm = othAdltnm;
  }

  public LocalDate getStartDt() {
    return startDt;
  }

  public void setStartDt(LocalDate startDt) {
    this.startDt = startDt;
  }

  public String getLstUpdId() {
    return lstUpdId;
  }

  public void setLstUpdId(String lstUpdId) {
    this.lstUpdId = lstUpdId;
  }

  public LocalDateTime getLstUpdTs() {
    return lstUpdTs;
  }

  public void setLstUpdTs(LocalDateTime lstUpdTs) {
    this.lstUpdTs = lstUpdTs;
  }

  public String getFkplcHmT() {
    return fkplcHmT;
  }

  public void setFkplcHmT(String fkplcHmT) {
    this.fkplcHmT = fkplcHmT;
  }

  public String getComntDsc() {
    return comntDsc;
  }

  public void setComntDsc(String comntDsc) {
    this.comntDsc = comntDsc;
  }

  public String getOthAdlCd() {
    return othAdlCd;
  }

  public void setOthAdlCd(String othAdlCd) {
    this.othAdlCd = othAdlCd;
  }

  public LocalDate getIdentfdDt() {
    return identfdDt;
  }

  public void setIdentfdDt(LocalDate identfdDt) {
    this.identfdDt = identfdDt;
  }

  public String getResostInd() {
    return resostInd;
  }

  public void setResostInd(String resostInd) {
    this.resostInd = resostInd;
  }

  public String getPassbcCd() {
    return passbcCd;
  }

  public void setPassbcCd(String passbcCd) {
    this.passbcCd = passbcCd;
  }

  @Override
  public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }

  @Override
  public Serializable getPrimaryKey() {
    return getIdentifier();
  }
}
