package gov.ca.cwds.cals.persistence.model.cms;

import gov.ca.cwds.data.persistence.PersistentObject;
import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;

/**
 * @author CWDS CALS API Team
 *
 * Background Check information about SUBSTITUTE CARE PROVIDERS, OTHER ADULTS IN PLACEMENT HOME,
 * OTHER CHILDREN IN PLACEMENT HOME and COLLATERAL INDIVIDUAL.
 */
@Entity
@Table(name = "BKGRCHKT")
@SuppressWarnings({"squid:S3437"}) //LocalDate is serializable
public class BackgroundCheck implements PersistentObject {

  private static final long serialVersionUID = -5488937008018641815L;

  /**
   * ID - A system generated number used to uniquely identify each BACKGROUND_CHECK. This ID is
   * composed of a base 62 Creation Timestamp and the STAFF PERSON ID (a sequential 3 digit base 62
   * number generated by the system). This value eliminates the need for an additional set of
   * Creation Timestamp and Creation User ID which is needed to satisfy the Audit Trail
   * requirement.
   */
  @Id
  @Column(name = "IDENTIFIER", nullable = false, length = 10)
  private String identifier;

  /**
   * RECIPIENT_CODE - This code represents each type of recipient in a PLACEMENT_HOME to whom a
   * background check was made (e.g., Substitute Care Providers (S), Other Adults in Placement Home
   * (O), or Other Children in Placement Home (H)).
   */
  @Basic
  @Column(name = "RCPNT_CD", nullable = true, length = 1)
  private String rcpntCd;

  /**
   * RECIPIENT_ID - The logical foreign key representing the ID from the recipient entity to whom a
   * background check was made (e.g., the ID from the SUBSTITUTE CARE PROVIDER, OTHER ADULTS IN
   * PLACEMENT HOME, or OTHER CHILDREN IN PLACEMENT HOME).
   */
  @Basic
  @Column(name = "RCPNT_ID", nullable = true, length = 10)
  private String rcpntId;

  /**
   * BACKGRND_CHECK_TYPE - The system generated number designated for each type of Background Check
   * (e.g., CLETS, CWS/CMS Search, Live Scan Fingerprints Submitted, DOJ CACI Received, etc). The
   * selection choices will be provided by the Background Check Type code table.
   */
  @Basic
  @Column(name = "BKGRCHKC", nullable = false)
  private short bkgrchkc;

  /**
   * BACKGRND_CHECK_DATE - The date the background check was made for a recipient.
   */
  @Basic
  @Column(name = "BKGRCHK_DT", nullable = false)
  private LocalDate bkgrchkDt;

  /**
   * LAST_UPDATE_ID - The ID (a sequential 3 digit base 62 number generated by the system) of the
   * STAFF PERSON or batch program which made the last update to an occurrence of this entity type.
   */
  @Basic
  @Column(name = "LST_UPD_ID", nullable = false, length = 3)
  private String lstUpdId;

  /**
   * LAST_UPDATE_TIMESTAMP - The time and date of the most recent update to an occurrence of this
   * entity type.
   */
  @Basic
  @Column(name = "LST_UPD_TS", nullable = false)
  private LocalDateTime lstUpdTs;

  /**
   * FKCOLTRL_T - Optional Foreign key that SHOWS_BACKGROUND_CHECK_FOR a COLLATERAL_INDIVIDUAL.
   */
  @Basic
  @Column(name = "FKCOLTRL_T", nullable = true, length = 10)
  private String fkcoltrlT;

  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public String getRcpntCd() {
    return rcpntCd;
  }

  public void setRcpntCd(String rcpntCd) {
    this.rcpntCd = rcpntCd;
  }

  public String getRcpntId() {
    return rcpntId;
  }

  public void setRcpntId(String rcpntId) {
    this.rcpntId = rcpntId;
  }

  public short getBkgrchkc() {
    return bkgrchkc;
  }

  public void setBkgrchkc(short bkgrchkc) {
    this.bkgrchkc = bkgrchkc;
  }

  public LocalDate getBkgrchkDt() {
    return bkgrchkDt;
  }

  public void setBkgrchkDt(LocalDate bkgrchkDt) {
    this.bkgrchkDt = bkgrchkDt;
  }

  public String getLstUpdId() {
    return lstUpdId;
  }

  public void setLstUpdId(String lstUpdId) {
    this.lstUpdId = lstUpdId;
  }

  public LocalDateTime getLstUpdTs() {
    return lstUpdTs;
  }

  public void setLstUpdTs(LocalDateTime lstUpdTs) {
    this.lstUpdTs = lstUpdTs;
  }

  public String getFkcoltrlT() {
    return fkcoltrlT;
  }

  public void setFkcoltrlT(String fkcoltrlT) {
    this.fkcoltrlT = fkcoltrlT;
  }

  @Override
  public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }

  @Override
  public Serializable getPrimaryKey() {
    return getIdentifier();
  }
}
