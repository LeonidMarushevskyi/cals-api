package gov.ca.cwds.cals.persistence.model.cms;

import gov.ca.cwds.data.persistence.PersistentObject;
import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;

/** @author CWDS CALS API Team */
@Entity
@Table(name = "OST_CHKT")
@SuppressWarnings({"squid:S3437"}) //LocalDate is serializable
public class OutOfStateCheck implements PersistentObject {

  private static final long serialVersionUID = 8069065399852194349L;

  /**
   * ID - A system generated number used to uniquely identify each OUT OF STATE CHECK. This ID is
   * composed of a base 62 Creation Timestamp and the STAFF PERSON ID (a sequential 3 digit base 62
   * number generated by the system). This value eliminates the need for an additional set of
   * Creation Timestamp and Creation User ID which is needed to satisfy the Audit Trail requirement.
   */
  @Id
  @Column(name = "IDENTIFIER", nullable = false, length = 10)
  private String identifier;

  /**
   * RECIPIENT_ID - The logical foreign key representing the ID from the recipient entity to whom an
   * OUT OF STATE CHECK was made (e.g., the ID from the SUBSTITUTE CARE PROVIDER or OTHER ADULTS IN
   * PLACEMENT HOME.
   */
  @Basic
  @Column(name = "RCPNT_ID", nullable = true, length = 10)
  private String rcpntId;

  /**
   * RECIPIENT_CODE - This code represents each type of recipient in a PLACEMENT_HOME to whom an OUT
   * OF STATE CHECK was made (e.g., Substitute Care Providers (S) or Other Adults in Placement Home
   * (O)).
   */
  @Basic
  @Column(name = "RCPNT_CD", nullable = true, length = 1)
  private String rcpntCd;

  /**
   * STATE_CODE_TYPE - The system generated number which identifies the State for a specific OUT OF
   * STATE CHECK (e.g. Alaska, Hawaii, Texas, Out of Country etc). The selection choices will be
   * provided by the State Code Type and Other State Code Type code tables, therefore this attribute
   * will store the SysId of the chosen value
   */
  @Basic
  @Column(name = "STATE_C", nullable = false)
  private Short stateC;

  /**
   * REGISTRY_MAINTAINED_IND - Indicates whether the selected State maintains a Child Abuse Registry
   * (Y) or does not maintain a Child Abuse Registry (N).
   */
  @Basic
  @Column(name = "REGMNT_IND", nullable = true, length = 1)
  private String regmntInd;

  /** REQUEST_DATE - The date a Out of State Child Abuse clearance request was sent. */
  @Basic
  @Column(name = "REQUEST_DT", nullable = true)
  private LocalDate requestDt;

  /** RECEIVE_DATE - The date a Out of State Child Abuse clearance response was received. */
  @Basic
  @Column(name = "RECEIVE_DT", nullable = true)
  private LocalDate receiveDt;

  /** STATUS_DATE - The date of the Out of State Child Abuse clearance status. */
  @Basic
  @Column(name = "STATUS_DT", nullable = true)
  private LocalDate statusDt;

  /**
   * STATUS_CODE - This code represents whether the Out of State Child Abuse clearance status is
   * cleared or not cleared (e.g., Cleared (C), or Other Not Cleared (N)).
   */
  @Basic
  @Column(name = "STATUS_CD", nullable = true, length = 1)
  private String statusCd;

  /**
   * LAST_UPDATE_ID - The ID (a sequential 3 digit base 62 number generated by the system) of the
   * STAFF PERSON or batch program which made the last update to an occurrence of this entity type.
   */
  @Basic
  @Column(name = "LST_UPD_ID", nullable = false, length = 3)
  private String lstUpdId;

  /**
   * LAST_UPDATE_TIMESTAMP - The time and date of the most recent update to an occurrence of this
   * entity type.
   */
  @Basic
  @Column(name = "LST_UPD_TS", nullable = false)
  private LocalDateTime lstUpdTs;

  /**
   * FKCOLTRL_T - Optional Foreign key that SHOWS_BACKGROUND_CHECK_FOR a COLLATERAL_INDIVIDUAL.
   */
  @Basic
  @Column(name = "FKCOLTRL_T", nullable = true, length = 10)
  private String fkcoltrlT;

  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public String getRcpntId() {
    return rcpntId;
  }

  public void setRcpntId(String rcpntId) {
    this.rcpntId = rcpntId;
  }

  public String getRcpntCd() {
    return rcpntCd;
  }

  public void setRcpntCd(String rcpntCd) {
    this.rcpntCd = rcpntCd;
  }

  public Short getStateC() {
    return stateC;
  }

  public void setStateC(Short stateC) {
    this.stateC = stateC;
  }

  public String getRegmntInd() {
    return regmntInd;
  }

  public void setRegmntInd(String regmntInd) {
    this.regmntInd = regmntInd;
  }

  public LocalDate getRequestDt() {
    return requestDt;
  }

  public void setRequestDt(LocalDate requestDt) {
    this.requestDt = requestDt;
  }

  public LocalDate getReceiveDt() {
    return receiveDt;
  }

  public void setReceiveDt(LocalDate receiveDt) {
    this.receiveDt = receiveDt;
  }

  public LocalDate getStatusDt() {
    return statusDt;
  }

  public void setStatusDt(LocalDate statusDt) {
    this.statusDt = statusDt;
  }

  public String getStatusCd() {
    return statusCd;
  }

  public void setStatusCd(String statusCd) {
    this.statusCd = statusCd;
  }

  public String getLstUpdId() {
    return lstUpdId;
  }

  public void setLstUpdId(String lstUpdId) {
    this.lstUpdId = lstUpdId;
  }

  public LocalDateTime getLstUpdTs() {
    return lstUpdTs;
  }

  public void setLstUpdTs(LocalDateTime lstUpdTs) {
    this.lstUpdTs = lstUpdTs;
  }

  public String getFkcoltrlT() {
    return fkcoltrlT;
  }

  public void setFkcoltrlT(String fkcoltrlT) {
    this.fkcoltrlT = fkcoltrlT;
  }

  @Override
  public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }

  @Override
  public Serializable getPrimaryKey() {
    return getIdentifier();
  }
}
