/**
 * @author CALS API team.
 */


entity RFAApplication {
	rfaApplicationType String maxlength(100) required, //initial or other,
    isChildIdentified Boolean,
	isChildCurrentlyInYourHome Boolean required,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
 	updateUserId String maxlength(50) required,
 	updateDateTime ZonedDateTime required
}

entity DeterminedChild {
   dateOfPlacement LocalDate required
}

entity RFAApplicationStatusType {
    name String maxlength(100) required
}

entity LicensureHistory {
    licensureHistoryQuestion1 Boolean required,
    licensureHistoryQuestion11 String,
	licensureHistoryQuestion12 String,
    licensureHistoryQuestion2 Boolean required,
	licensureHistoryQuestion21 String,
	licensureHistoryQuestion3 Boolean required,
	licensureHistoryQuestion31 String,
	licensureHistoryQuestion4 Boolean required,
	licensureHistoryQuestion41 String,
	licensureHistoryQuestion5 Boolean required,
	licensureHistoryQuestion51 String,
	licensureHistoryQuestion6 Boolean required,
	licensureHistoryQuestion61 String,
	licensureHistoryQuestion7 Boolean required,
	licensureHistoryQuestion71 String
}

entity Household {
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
    updateUserId String maxlength(50) required,
    updateDateTime ZonedDateTime required
}

entity HouseholdAdult {
	outOfStateDisclosureState Boolean required,
	criminalRecordStatementQuestion1 Boolean required,
	criminalRecordStatementQuestion2 Boolean required,
	criminalRecordStatementQuestion3 Boolean required,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
    updateUserId String maxlength(50) required,
    updateDateTime ZonedDateTime required
}

entity CriminalRecord {
	offenseDescription TextBlob required,
    offenseDate LocalDate,
    offenseExplanation TextBlob required,
	city String maxlength(100),
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
    updateUserId String maxlength(50) required,
    updateDateTime ZonedDateTime required
}

entity Person {
    firstName String required,
    lastName String required,
    middleName String,
    ssn String,
	dateOfBirth LocalDate required,
    driversLicenseNumber String required,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
 	updateUserId String maxlength(50) required,
 	updateDateTime ZonedDateTime required
}

entity CountyType {
    fipsCode String required minlength(3) maxlength(3),
    description String maxlength(20)
}

entity StateType {
    name String maxlength(100) required,
}

entity PersonPreviousName {
	name String required,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity EducationLevelType {
  	name String required,
    level Integer
}

entity EducationPoint {
  	degree String required,
    name String required,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity GenderType {
	name String required
}

entity RaceType {
	name String required
}

entity EthnicityType {
	name String required
}

entity EmailAddress {
  	email String required,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity PhoneNumber {
  	phoneNumber String required,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity PersonPhone {
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity PersonAddress {
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity PhoneNumberType {
	type String required
}

entity Address {
    streetAddress String required maxlength(100),
    city String required maxlength(50),
    state String required minlength(2) maxlength(2),
    zipCode String required minlength(5) maxlength(5),
    zipSuffixCode String minlength(4) maxlength(4),
    longitude BigDecimal,
    latitude BigDecimal,
    deliverable Boolean,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity Employer {
    name String,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity Employment {
  	occupation String required,
  	annualIncome BigDecimal required,
    startDate LocalDate required,
    endDate LocalDate,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity AddressType {
	name String required
}

entity PosessionType { //own, rent, lease
	name String required
}

entity HouseholdAddress {
    isWeaponsInHome Boolean required,
    directionsToHome String,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
    updateUserId String maxlength(50) required,
    updateDateTime ZonedDateTime required
}

entity BodyOfWater {
  	location String,
    size Integer,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity LanguageType {
    name String  maxlength(20) required
}

entity RelationshipType {
    name String maxlength(100) required
}

entity Relationship {
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
    updateDateTime ZonedDateTime required
}

entity RelationshipEvent {
  	eventPlace String,
    eventDate LocalDate,
    eventDescription String,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity HouseholdChild {
  	isFinanciallySupported Boolean required,
    isAdopted Boolean required,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity AgeGroupType {
   name String  maxlength(20) required
}

entity SiblingGroupType {
   name String  maxlength(20) required
}

entity ChildPreferences {
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity RFAApplicationStatusType {
   name String  maxlength(100) required
}

relationship ManyToOne {
  RFAApplication{forCountyUseOnly} to CountyType,
  RFAApplication{status} to RFAApplicationStatusType,
  Person{gender required} to GenderType,
  Person{race required} to RaceType,
  PersonPhone{phoneType} to PhoneNumberType,
  Employment{employer} to Employer,
  HouseholdAdult{household} to Household,
  HouseholdAddress{addressType} to AddressType,
  HouseholdAddress{posessionType} to PosessionType,
  PersonAddress{addressType} to AddressType,
  PersonAddress{address} to Address,
  Relationship{from required} to Person,
  Relationship{to required} to Person,
  HouseholdChild{household required} to Household,
  Relationship{relationshipType} to RelationshipType,
  DeterminedChild{countyOfJurisdiction required} to CountyType,
  EducationPoint{type} to EducationLevelType,
  EducationPoint{address} to Address
}

relationship ManyToMany {
  Person{ethnicities required} to EthnicityType,
  Household{languages} to LanguageType,
  ChildPreferences{ageGroupTypes} to AgeGroupType,
  ChildPreferences{siblingGroupTypes} to SiblingGroupType,
  HouseholdAdult{otherStates} to StateType
}

relationship OneToMany {
    RFAApplication{references} to Person,
    RFAApplication to DeterminedChild{application},
    RFAApplication{applicants} to HouseholdAdult,
    Person{previousNames} to PersonPreviousName,
    Person{emailAddresses} to EmailAddress,
    Person{phoneNumbers} to PersonPhone{person},
    Person{employments} to Employment{person},
    Person{addresses} to PersonAddress,
    Person{educationPoints} to EducationPoint{person},
    Employment{phoneNumbers} to PhoneNumber,
    Household{persons} to Person,
    Household{addresses} to HouseholdAddress{address},
    HouseholdAddress{bodyOfWaters} to BodyOfWater,
	StateType{counties} to CountyType{state},
    HouseholdAdult{criminalRecords} to CriminalRecord{person}
}

relationship OneToOne {
  	RFAApplication{licensureHistory} to LicensureHistory{application},
    RFAApplication to ChildPreferences{application},
    PersonPhone{phoneNumber} to PhoneNumber,
    Employer{address} to Address,
    HouseholdAdult{person} to Person,
    HouseholdAddress{address} to Address,
    Relationship{startEvent} to RelationshipEvent{relationShip},
    Relationship{endEvent} to RelationshipEvent{relationShip},
    DeterminedChild{person} to Person,
    HouseholdChild{person} to Person,
    CriminalRecord{state} to StateType
}