/**
 * @author CALS API team.
 */

entity Dictionary {
  value String maxlength(100) required
}

entity DictionaryType {
  name String maxlength(100) required
}

entity AddressType{}

entity Application {
  isInitialApplication Boolean,
  otherApplicationType String, //3NF violated!!!
  isChildIdentified Boolean,
  signatureCity String,
  signatureDate LocalDate,
  isChildCurrentlyInYourHome Boolean,
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity DeterminedChild {
  dateOfPlacement LocalDate required
}

entity ApplicationStatusType {
}

entity LicensureHistory {
  licensureHistoryQuestion1 Boolean required,
  licensureHistoryQuestion11 String,
  licensureHistoryQuestion12 String,
  licensureHistoryQuestion2 Boolean required,
  licensureHistoryQuestion21 String,
  licensureHistoryQuestion3 Boolean required,
  licensureHistoryQuestion31 String,
  licensureHistoryQuestion4 Boolean required,
  licensureHistoryQuestion41 String,
  licensureHistoryQuestion5 Boolean required,
  licensureHistoryQuestion51 String,
  licensureHistoryQuestion6 Boolean required,
  licensureHistoryQuestion61 String,
  licensureHistoryQuestion7 Boolean required,
  licensureHistoryQuestion71 String,
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity Household {
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity HouseholdAdult {
  outOfStateDisclosureState Boolean required,
  criminalRecordStatementQuestion1 Boolean required,
  criminalRecordStatementQuestion2 Boolean required,
  criminalRecordStatementQuestion3 Boolean required,
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity Applicant {
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity CriminalRecord {
  offenseDescription TextBlob required,
  offenseDate LocalDate,
  offenseExplanation TextBlob required,
  city String maxlength(100),
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity Person {
  firstName String required,
  lastName String required,
  middleName String,
  ssn String,
  dateOfBirth LocalDate required,
  driversLicenseNumber String required,
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity CountyType {
  fipsCode String required minlength(3) maxlength(3)
}

entity StateType {
}

entity PersonOtherName {
  firstName String required,
  middleName String required,
  lastName String required,
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity OtherNameType { //alias, maiden name, preferred name, other
}

entity EducationLevelType {
  name String required,
  level Integer
}

entity EducationPoint {
  degree String required,
  name String required,
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity GenderType {
}

entity RaceType {
}

entity EthnicityType {
}

entity EmailAddress {
  email String required,
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity PhoneNumber {
  phoneNumber String required,
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity PersonPhone {
  isPreferredContact Boolean,
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity PersonAddress {
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity PhoneNumberType {
}

entity Address {
  streetAddress String required maxlength(100),
  city String required maxlength(50),
  state String required minlength(2) maxlength(2),
  zipCode String required minlength(5) maxlength(5),
  zipSuffixCode String minlength(4) maxlength(4),
  longitude BigDecimal,
  latitude BigDecimal,
  deliverable Boolean,
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity Employer {
  name String,
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity Employment {
  occupation String required,
  annualIncome BigDecimal required,
  startDate LocalDate required,
  endDate LocalDate,
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity ResidenceOwnershipType { //own, rent, lease
}

entity HouseholdAddress {
  isWeaponsInHome Boolean required,
  directionsToHome String maxlength(255),
  bodyOfWater TextBlob,
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity BriefPerson {
  firstName String,
  middleName String,
  lastName String,
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity LanguageType {
}

entity RelationshipType {
}

entity Relationship {
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity RelationHistoryRecord {
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity RelationshipEvent {
  eventPlace String,
  eventDate LocalDate,
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity RelationshipEventType {
}

entity HouseholdChild {
  isFinanciallySupported Boolean required,
  isAdopted Boolean required,
  dateOfBirth LocalDate,
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity ApplicantToChildRelation {
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity AgeGroupType {
}

entity SiblingGroupType {
}

entity ChildPreferences {
  createUserId String maxlength(50) required,
  createDateTime ZonedDateTime required,
  updateUserId String maxlength(50) required,
  updateDateTime ZonedDateTime required
}

entity ApplicationStatusType {
}

relationship ManyToOne {
  Dictionary{type} to DictionaryType,
  Application{forCountyUseOnly} to CountyType,
  Application{status} to ApplicationStatusType,
  Person{gender required} to GenderType,
  Person{race required} to RaceType,
  PersonPhone{phoneType} to PhoneNumberType,
  Employment{employer} to Employer,
  HouseholdAdult{household} to Household,
  HouseholdAddress{addressType} to AddressType,
  HouseholdAddress{residenceOwnershipType} to ResidenceOwnershipType,
  PersonAddress{addressType} to AddressType,
  PersonAddress{address} to Address,
  Relationship{from required} to Person,
  Relationship{to required} to Person,
  HouseholdChild{household required} to Household,
  ApplicantToChildRelation{applicant} to Applicant,
  Relationship{relationshipType} to RelationshipType,
  RelationHistoryRecord{relationshipType} to RelationshipType,
  DeterminedChild{countyOfJurisdiction required} to CountyType,
  EducationPoint{type} to EducationLevelType,
  EducationPoint{educationalInstitutionAddress} to Address,
  RelationshipEvent{eventType} to RelationshipEventType
}

relationship ManyToMany {
  Person{ethnicities required} to EthnicityType,
  Household{languages} to LanguageType,
  ChildPreferences{ageGroupTypes} to AgeGroupType,
  ChildPreferences{siblingGroupTypes} to SiblingGroupType,
  HouseholdAdult{otherStates} to StateType,
  Application{references} to Person
}

relationship OneToMany {
  Application to DeterminedChild{application},
  Application{applicants} to Applicant{application},
  Person{previousNames} to PersonOtherName,
  Person{emailAddresses} to EmailAddress,
  Person{phoneNumbers} to PersonPhone{person},
  Person{employments} to Employment{person},
  Person{addresses} to PersonAddress,
  Person{educationPoints} to EducationPoint{person},
  Employer{phoneNumbers} to PhoneNumber,
  Household{persons} to Person,
  Household{addresses} to HouseholdAddress{address},
  HouseholdAddress{personsUsingResidenceAsMailingAddress} to BriefPerson,
  StateType{counties} to CountyType{state},
  HouseholdAdult{criminalRecords} to CriminalRecord{person},
  Applicant{relationHistoryRecords} to RelationHistoryRecord{applicant},
  HouseholdChild{relationsToApplicant} to ApplicantToChildRelation{child}
}

relationship OneToOne {
  Application{licensureHistory} to LicensureHistory{application},
  Application to ChildPreferences{application},
  Application{signatureCounty} to CountyType,
  PersonPhone{phoneNumber} to PhoneNumber,
  Employer{address} to Address,
  HouseholdAdult{person} to Person,
  HouseholdChild{gender} to GenderType,
  Applicant{householdPerson} to HouseholdAdult,
  Applicant{educationHighestLevel} to EducationLevelType,
  HouseholdAddress{address} to Address,
  RelationHistoryRecord{startEvent required} to RelationshipEvent{relationShip},
  RelationHistoryRecord{endEvent required} to RelationshipEvent{relationShip},
  DeterminedChild{person} to Person,
  CriminalRecord{state} to StateType,
  PersonOtherName{nameType} to OtherNameType,
  ApplicantToChildRelation{relationtype} to RelationshipType,
  CountyType to Dictionary,
  StateType to Dictionary,
  EducationLevelType to Dictionary,
  ApplicationStatusType to Dictionary,
  OtherNameType to Dictionary,
  GenderType to Dictionary,
  RaceType to Dictionary,
  EthnicityType to Dictionary,
  PhoneNumberType to Dictionary,
  AddressType to Dictionary,
  ResidenceOwnershipType{dictionary} to Dictionary,
  LanguageType to Dictionary,
  RelationshipType to Dictionary,
  RelationshipEventType to Dictionary,
  AgeGroupType to Dictionary,
  SiblingGroupType to Dictionary,
  ApplicationStatusType to Dictionary

}
