/**
 * @author CALS API team.
 */

entity RFAApplication {
	  rfaApplicationType String maxlength(100) required, //initial or other
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
 	  updateUserId String maxlength(50) required,
 	  updateDateTime ZonedDateTime required
}

entity DesiredChildType { //determined or non-determined
   name String maxlength(100) required
}

entity DeterminedChild {
   dateOfPlacement LocalDate required
}

entity RFAApplicationStatusType {
    name String maxlength(100) required
}

/**
* Table describes questions with yes/no answer
* and additional answer-refinement in case if answer is yes
* and null in case if answer no
*/
entity RFAApplicationQuestion {
	code String maxlength(100) required,
    question String maxlength(255) required,
    order Integer required,
    questionAnswerIfYes String maxlength(255),
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
 	  updateUserId String maxlength(50) required,
 	  updateDateTime ZonedDateTime required
}

entity PreviousFosterCareApproval {
	agencyName String maxlength(255) required,
    approvalType String maxlength(100) required,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
 	  updateUserId String maxlength(50) required,
 	  updateDateTime ZonedDateTime required
}

entity Household {
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
 	  updateUserId String maxlength(50) required,
 	  updateDateTime ZonedDateTime required
}

entity HouseholdApplicant {
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
 	  updateUserId String maxlength(50) required,
 	  updateDateTime ZonedDateTime required
}

entity Person {
    firstName String required,
    lastName String required,
    middleName String,
	  dateOfBirth LocalDate required,
    driversLicenseNumber String required,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
 	  updateUserId String maxlength(50) required,
 	  updateDateTime ZonedDateTime required
}

entity CountyType {
	  fipsCode String required minlength(3) maxlength(3),
    description String maxlength(20)
}

entity PersonPreviousName {
	name String required,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity EducationLevelType {
  	name String required,
    level Integer
}

entity EducationPoint {
  	degree String required,
    name String required,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity GenderType {
	name String required
}

entity RaceType {
	name String required
}

entity EthnicityType {
	name String required
}

entity EmailAddress {
  	email String required,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity PhoneNumber {
  	phoneNumber String required,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity PersonPhone {
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity PersonAddress {
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity PhoneNumberType {
	type String required
}

entity Address {
    streetAddress String required maxlength(100),
    city String required maxlength(50),
    state String required minlength(2) maxlength(2),
    zipCode String required minlength(5) maxlength(5),
    zipSuffixCode String minlength(4) maxlength(4),
    longitude BigDecimal,
    lattitude BigDecimal,
    deliverable Boolean,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity Employer {
    name String,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity Employment {
  	occupation String required,
  	annualIncome BigDecimal required,
    startDate LocalDate required,
    endDate LocalDate,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity AddressType {
	name String required
}

entity PosessionType { //own, rent, lease
	name String required
}

entity HouseholdAddress {
	  isWeaponsInHome Boolean required,
    directionsToHome String,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
 	  updateUserId String maxlength(50) required,
 	  updateDateTime ZonedDateTime required
}

entity BodyOfWater {
  	location String,
    size Integer,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity LanguageType {
    name String  maxlength(20) required
}

entity RelationshipType {
    name String maxlength(100) required
}

entity Relationship {
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
 	  updateDateTime ZonedDateTime required
}

entity RelationshipEvent {
  	eventPlace String,
    eventDate LocalDate,
    eventDescription String,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity HouseholdChild {
  	isFinanciallySupported Boolean required,
    isAdopted Boolean required,
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity PreferredAgeType{
   name String  maxlength(20) required
}

entity SiblingType{
   name String  maxlength(20) required
}

entity ChildPreferences {
    createUserId String maxlength(50) required,
    createDateTime ZonedDateTime required,
   	updateUserId String maxlength(50) required,
   	updateDateTime ZonedDateTime required
}

entity RFAApplicationStatusType {
   name String  maxlength(100) required
}

relationship ManyToOne {
  RFAApplication{forCountyUseOnly} to CountyType,
  RFAApplication{status} to RFAApplicationStatusType,
  RFAApplication{desiredChildType} to DesiredChildType,
  Person{gender required} to GenderType,
  Person{race required} to RaceType,
  PersonPhone{phoneType} to PhoneNumberType,
  Employment{employer} to Employer,
  HouseholdApplicant{household} to Household,
  HouseholdAddress{addressType} to AddressType,
  HouseholdAddress{posessionType} to PosessionType,
  PersonAddress{addressType} to AddressType,
  PersonAddress{address} to Address,
  Relationship{from required} to Person,
  Relationship{to required} to Person,
  HouseholdChild{household required} to Household,
  HouseholdChild{person} to Person,
  Relationship{relationshipType} to RelationshipType,
  ChildPreferences{preferredAge} to PreferredAgeType,
  ChildPreferences{sibling} to SiblingType,
  DeterminedChild{county} to CountyType,
  EducationPoint{type} to EducationLevelType,
  EducationPoint{address} to Address
}

relationship ManyToMany {
  Person{ethnicities required} to EthnicityType,
  Household{languages} to LanguageType
}

relationship OneToMany {
    RFAApplication{questions} to RFAApplicationQuestion,
    RFAApplication{references} to Person,
    RFAApplication to DeterminedChild{application},
    RFAApplication{applicants} to HouseholdApplicant,
	  Person{previousNames} to PersonPreviousName,
    Person{emailAddresses} to EmailAddress,
    Person{phoneNumbers} to PersonPhone{person},
    Person{employments} to Employment{person},
    Person{addresses} to PersonAddress,
    Person{educationPoints} to EducationPoint{person},
    Employment{phoneNumbers} to PhoneNumber,
    Household{persons} to Person,
	  Household{addresses} to HouseholdAddress{address},
    HouseholdAddress{bodyOfWaters} to BodyOfWater
}

relationship OneToOne {
  	RFAApplication{previousFosterCareApproval} to PreviousFosterCareApproval,
    RFAApplication to ChildPreferences{application},
	  PersonPhone{phoneNumber} to PhoneNumber,
    Employer{address} to Address,
    HouseholdApplicant{person} to Person,
    HouseholdAddress{address} to Address,
    Relationship{startEvent} to RelationshipEvent{relationShip},
	  Relationship{endEvent} to RelationshipEvent{relationShip},
    DeterminedChild{person} to Person
}












